name: github-actions-java


on:
  workflow_dispatch:
    inputs:
      myenv:
        description: 'the env to run on'
        default: 'dev'
        #: 'test'
        required: true
  push:
    branches:
    - main
    - release
    

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step2.outputs.test }}
      output2: ${{ steps.step3.outputs.test }}
    
    steps:
      - id: step1
        run: |
          branchName=$(echo '${{ github.ref }}')
          echo $branchName
      - id : step2
        run: echo "::set-output name=test::release"
        if: contains(echo $branchName, 'release')
      - id : step3
        run: echo "::set-output name=test::main"
        if: contains(echo $branchName, 'main')
    
  some_job:
    if: github.ref == 'refs/heads/release' 
    needs: job1
    strategy:
      matrix:
        environment: ['release']
        #githubbranch: [1]
        #environment: [ '${{needs.job1.outputs.output1}}','${{needs.job1.outputs.output2}}']
      
          
          
    environment:
      name: ${{ matrix.environment }}
    runs-on: ubuntu-20.04
    name: some job
    steps:
      
      - run: echo ${{needs.job1.outputs.output1}}
      - run: |
            branchName=$(echo '${{ github.ref }}' | sed 's,refs/heads/,,g') 
            echo $branchName
      - name: show env
        env:  
          name: ${{ secrets.KEY }}"
        run: echo "Name_key:$name"
      - run: echo "${{ matrix.github.ref }} "
      #== 'refs/heads/release' }}
  Build-UAT:
    if: github.event_name != 'pull_request' && ( needs.UnitTest-UAT.result == 'success' || github.ref == 'refs/heads/release' ) || ( needs.UnitTest.result == 'success' || github.ref == 'refs/heads/main' )
    needs: some_job
    name: Build-UAT
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - run: pwd
      - run: tree

  Fortify-SAST:
  
    needs: Build-UAT
    runs-on: ubuntu-latest
     
    outputs:
        output1: ${{ env.JOB_TOKEN }} # try outputting job token to use in additional jobs
     
    steps:
    - uses: actions/checkout@v1
    - name: Run PowerShell Get Critical/High Count script
      run: |
        ls
          
    
  # job to get count of Critical/High vulnerabilities associated with this repo
  Fortifyanalysis:
    if: needs.Fortify-SAST.result == 'success'
    needs: Fortify-SAST # this setting makes this job dependent on build completing successfully
 
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v1
    - name: Run PowerShell Get Critical/High Count script
      run: |
        ls
 
      

  DeployArtifacts-Test:
    if: needs.Fortifyanalysis.result == 'success' 
    needs: Fortifyanalysis
    runs-on: ubuntu-latest
   # environment: TEST
    steps:
    - uses: actions/checkout@v2
    - run: echo "this job is not completed yet" 
 
  IntegrationTest:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main'
    needs: DeployArtifacts-Test 
    name: IntegrationTest
    runs-on: ubuntu-latest
   
    
    steps:
    - uses: actions/checkout@v2
    - run: echo "this job is not completed yet" 
 
   
    
  LoadTest:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main'  && success()
    needs: IntegrationTest
    name: Run Load Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Load test status - Jmeter
      run: echo "This Job would get updated soon"
