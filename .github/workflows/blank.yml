name: github-actions-java

 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - main
    - master
    - release
 
env:
  REGION: ap-east-1 
  
  JAVA_VERSION: '1.8'
  
  
jobs:
  

  UnitTest: 
    if: github.ref == 'refs/heads/main'  || github.base_ref == 'main'
    name: Unit Test Only-test
    runs-on: ubuntu-latest
    environment: 
      name: TEST
    
    steps:
      - run: echo "Ref :$GITHUB_REF"
      - run: echo "$GITHUB_BASE_REF"
      - run: echo "$GITHUB_HEAD_REF"
      - name: checkout
        uses: actions/checkout@v2
      - run: echo "${{ secrets.TEST }}
      

     
  UnitTest-UAT:
    if: github.ref == 'refs/heads/release'  || github.base_ref == 'release'
    name: Unit Test Only -UAT
    runs-on: ubuntu-latest
    environment: TEST
    
    steps:
      - run: echo "${{ secrets.TEST }} "
      - run: echo "Ref :$GITHUB_REF"
      - run: echo "$GITHUB_BASE_REF"
      - name: checkout
        uses: actions/checkout@v2
      
    
    
       

  
  Build-Test:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && success()
    needs: UnitTest
    name: Build-Test
    runs-on: ubuntu-latest
    environment: 
      name: TEST
    steps:
      - name: checkout
        uses: actions/checkout@v2
     
      - run: pwd
    
      - run: tree
  

  Build-UAT:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' && success()
    needs: UnitTest-UAT
    name: Build-UAT
    runs-on: ubuntu-latest
  
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
     
      - run: pwd
      - run: echo "${{ secrets.TEST }}"
      - run: tree
  
            
            
  Fortify-SAST:
    if: github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main' || github.base_ref == 'main' || github.base_ref == 'release' && always()
    needs: [ Build-Test, Build-UAT ]
    runs-on: ubuntu-latest
    environment: TEST
     
    outputs:
        output1: ${{ env.JOB_TOKEN }} # try outputting job token to use in additional jobs
     
    steps:
    - uses: actions/checkout@v1
    - name: Run PowerShell Get Critical/High Count script
      run: |
        ls
        echo "${{ secrets.TEST }}"
      
          
    
  # job to get count of Critical/High vulnerabilities associated with this repo
  get-fortify-vulnerabilities:
    if: always()
    needs: Fortify-SAST # this setting makes this job dependent on build completing successfully
 
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v1
    - name: Run PowerShell Get Critical/High Count script
      run: |
        ls
  PublishPackage:
    needs: get-fortify-vulnerabilities
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && success()
    steps:
      - uses: actions/checkout@v2

    
      
      - name: deploy Code to lambda functions
        run: |
          echo "hello"   
  DeployArtifacts:
    needs: PublishPackage
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
  
 
    steps:
      - uses: actions/checkout@v2

    
      
      - name: deploy Code to lambda functions
        run: |
          echo "hello"

      
      

  DeployArtifacts-Test:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' && success()
    needs: get-fortify-vulnerabilities
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2
    - run: echo "this job is not completed yet" 
 
  IntegrationTest:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main' && always()
    needs: [ DeployArtifacts-Test,DeployArtifacts ]
    name: IntegrationTest
    runs-on: ubuntu-latest
   
    
    steps:
    - uses: actions/checkout@v2
    - run: echo "this job is not completed yet" 
 
   
    
  LoadTest:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main'  && success()
    needs: IntegrationTest
    name: Run Load Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Load test status - Jmeter
      run: echo "This Job would get updated soon"
